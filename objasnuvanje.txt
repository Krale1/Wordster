Декораторот е дефиниран како функцијата validate_word.
Овој декоратор се користи за да ја провери валидноста на внесениот збор пред да продолжи со извршувањето на основната логика во 
функцијата check_word.

Кој декоратор патерн се користи?
    Користен е "Validation Decorator".
    Овој декоратор се користи за да ја провери должината на внесениот збор и да се осигура дека зборот има точно 5 букви. 
    Ако зборот не го исполнува овој услов, декораторот враќа порака за грешка, спречувајќи понатамошна обработка на функцијата. 
    Ако зборот е валиден, декораторот продолжува со извршувањето на главната логика на функцијата.
        
    Енкапсулација на валидацијата, Прочитливост и одвојување на одговорности

Зошто е користен "Validation Decorator" паттерн?

        Реупотребливост: Ако имаме повеќе функции кои треба да направат слична валидација (на пример, за да се осигураат дека зборовите се точни во играта), 
    можеш да го повторно користиш истиот декоратор на различни места. Ова ја намалува потребата за повторување на истиот код во повеќе функции.
        Прочитливост и чистота на кодот: Користењето на декоратори ја одвојува логиката за валидација од основната логика, 
    што го прави кодот многу почист и поразбирлив.
        Флексибилност: Користењето на декоратори овозможува лесно додавање на нови функционалности или промена на постоечките без да се 
    допираат основните функционалности на методите.

-----------------------------------------------------
Кои се разликите помеѓу Flask, FastAPI и Django, и зошто тимот се одлучил за конкретен framework од овие три?

Flask е минималистички фрејмворк кој нуди голема флексибилност и едноставност, што го прави идеален за проекти кои бараат брзо 
започнување и лесно проширување. За разлика од Django кој е многу структурирано и доаѓа со многу вградени компоненти, и FastAPI
кој е многу побрз, Flask ни дозволува да изградиме апликација по нашите правила без да бидеме ограничени. 

-----------------------------------------------------
Дали сите можности на избраниот framework, одговараат 1:1 со можностите на framework-от кој бил употребуван во PHP? 
Кој програмски јазик нуди подобри опции за web-development и зошто?

    Flask е фрејмворк за Python кој е многу флексибилен и лесен за користење, што го прави идеален за брзо развивање на апликации кои можат да 
вклучуваат напредни технологии како AI или машинско учење. Тој ви дава поголема контрола и ни овозможува да избереме само оние делови што ни се 
потребни.
    PHP е традиционален програмски јазик кој се користи многу за веб-развој, особено за веб-страници. 
Тој е многу стабилен и има огромна поддршка за хостинг и сервери, па ако работиме на традиционални веб-страници, PHP е добар избор.
    На крај, ако имаме потреба од напредни технологии или треба да брзо развиваме апликации, Flask е најдобар. 
    Ако развиваме стандардни веб-страници, PHP е одличен избор.